#cloud-config

# Cloud-init for initial provisioning
# - Creates the default 'ubuntu' user with SSH key
# - Installs essential packages
# - Clones this repository to /home/ubuntu/server-setup
# Advanced hardening and role setup are handled by repository scripts.

users:
  - name: ubuntu
    groups: [users, admin, sudo]
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    shell: /bin/bash
    lock_passwd: true
    ssh_authorized_keys:
      - ${ssh_public_key}

package_update: true
package_upgrade: true

packages:
  - git
  - curl
  - wget
  - unzip
  - vim
  - ufw
  - fail2ban
  - docker.io
  - docker-compose

# Minimal SSH hardening (do not change port here to avoid lockout)
write_files:
  - path: /etc/ssh/sshd_config.d/99-cloud-init.conf
    content: |
      PermitRootLogin no
      PasswordAuthentication no
      KbdInteractiveAuthentication no
      ChallengeResponseAuthentication no

runcmd:
  - [ bash, -lc, 'cd /home/ubuntu && git clone https://github.com/rfpdl/cloud-infra-setup.git server-setup' ]
  - [ chown, -R, ubuntu:ubuntu, /home/ubuntu/server-setup ]
  - [ bash, -lc, 'chmod +x /home/ubuntu/server-setup/*.sh || true' ]
  - [ systemctl, restart, sshd ]
  - [ bash, -lc, 'touch /var/lib/cloud/instance/cloud-config-finished' ]
  - [ bash, -lc, 'echo "$(date): Cloud-config completed - repo cloned to /home/ubuntu/server-setup" > /var/log/cloud-config-setup.log' ]

final_message: |
  Repository cloned to /home/ubuntu/server-setup

  Next steps:
  1. SSH to server: ssh ubuntu@YOUR_SERVER_IP
  2. cd /home/ubuntu/server-setup
  3. cp .env.example .env && vim .env
  4. make control-plane    # or make worker

# No automatic reboot â€” scripts handle services and restarts as needed
